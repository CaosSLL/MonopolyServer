<?php

namespace Caos\MonopolyBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * JugadorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JugadorRepository extends EntityRepository {

    public function obtenerTodos() {

        $jugadores = $this->getEntityManager()->createQueryBuilder()
                ->select("j, per, usu, par")
                ->from("CaosMonopolyBundle:Jugador", "j")
                ->join("j.idPersonaje", "per")
                ->join("j.idUsuario", "usu")
                ->join("j.idPartida", "par")
                ->getQuery()
                ->getArrayResult();

        return $jugadores;
    }

    public function obtenerPorId($id) {

        $jugador = $this->getEntityManager()->createQueryBuilder()
                ->select("j, per, usu, par")
                ->from("CaosMonopolyBundle:Jugador", "j")
                ->join("j.idPersonaje", "per")
                ->join("j.idUsuario", "usu")
                ->join("j.idPartida", "par")
                ->where("j.id = " . $id)
                ->getQuery()
                ->getArrayResult();

        return $jugador;
    }

    public function obtenerPorUsuario($id, $idPartida = null, $array = true) {

        $jugadores = $this->getEntityManager()->createQueryBuilder()
                ->select("j, per, par")
                ->from("CaosMonopolyBundle:Jugador", "j")
                ->join("j.idPersonaje", "per")
                ->join("j.idPartida", "par")
                ->where("j.idUsuario = " . $id);
        if($idPartida){
            $jugadores = $jugadores->andWhere("j.idPartida = ".$idPartida);
        }
        $jugadores = $jugadores->getQuery();
        if ($array) {
            return $jugadores->getArrayResult();
        } else {
            return $jugadores->getResult();
        }
    }

    public function obtenerPorPartida($id) {

        $jugadores = $this->getEntityManager()->createQueryBuilder()
                ->select("j, per, usu")
                ->from("CaosMonopolyBundle:Jugador", "j")
                ->join("j.idPersonaje", "per")
                ->join("j.idUsuario", "usu")
                ->where("j.idPartida = " . $id)
                ->getQuery()
                ->getArrayResult();

        return $jugadores;
    }

    public function obtenerPersonajes($token) {

        $personajes = $this->getEntityManager()->createQueryBuilder()
                ->select("j, per")
                ->from("CaosMonopolyBundle:Jugador", "j")
                ->join("j.idPersonaje", "per")
                ->join("j.idPartida", "par")
                ->where("par.token = " . $token)
                ->getQuery()
                ->getArrayResult();

        return $personajes;
    }

}
